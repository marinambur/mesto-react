{"version":3,"sources":["images/crest.svg","images/logo.svg","images/plus.svg","components/Header.js","components/Footer.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/PopupWithForm.js","components/ImagePopup.js","components/EditAvatarPopup.js","components/EditProfilePopup.js","components/AddPlacePopup.js","utils/Api.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","href","src","logo","alt","Footer","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","isOwn","card","owner","_id","isLiked","likes","some","i","key","id","type","onClick","onCardDelete","onCardCick","data-name","link","name","onCardLike","length","Main","avatar","onEditAvatar","onEditProfile","about","onAddPlace","plus","cards","map","onCardClick","PopupWithForm","isOpen","cross","close","title","children","onSubmit","ImagePopup","onClose","image","EditAvatarPopup","avatarRef","useRef","useState","setAvatar","useEffect","buttonText","e","preventDefault","onUpdateAvatar","current","value","method","action","ref","required","placeholder","onChange","target","EditProfilePopup","setName","description","setDescription","onUpdateUser","noValidate","pattern","minLength","maxLength","AddPlacePopup","inputName","setLink","onUpdatePlace","defaultValue","api","options","this","baseUrl","headers","fetch","then","res","ok","json","Promise","reject","status","userName","userJob","body","JSON","stringify","cardName","cardLink","cardId","statusText","data","userAvatar","authorization","App","setCurrentUser","setCurrentPlace","setCards","all","getUserInfo","getInitialCards","user","catch","err","console","log","dataImage","setDataImage","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","closeAllPopups","Provider","putLike","newCard","newCards","c","deleteLike","deleteCard","filter","setUserAvatar","r","updateUserInfo","addNewCard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"mFAAAA,EAAOC,QAAU,IAA0B,mC,kBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,mMCiB5BC,MAdf,WACI,OACI,4BAAQC,UAAU,UACd,uBAAGA,UAAU,oBAAoBC,KAAK,KACrC,yBACGD,UAAU,eACVE,IAAKC,IACLC,IAAI,uFCALC,MARf,WACI,OACI,4BAAQL,UAAU,UACd,uBAAGA,UAAU,qBAAb,iC,gBCJCM,EAAqBC,IAAMC,gBCyCzBC,MAtCf,SAAcC,GAEV,IAAMC,EAAcJ,IAAMK,WAAWN,GAE/BO,EAAQH,EAAMI,KAAKC,MAAMC,MAAQL,EAAYK,IAc7CC,EAAUP,EAAMI,KAAKI,MAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEJ,MAAQL,EAAYK,OAEjE,OACI,yBAAKhB,UAAU,OAAOqB,IAAKX,EAAMI,KAAKE,IAAKM,GAAIZ,EAAMI,KAAKE,KACtD,4BAAQO,KAAK,SAASvB,UAAS,wBAAmBa,GAAS,uCACnDW,QAThB,WACId,EAAMe,aAAaf,EAAMI,SASrB,yBAAKU,QAlBb,WACId,EAAMgB,WAAWhB,EAAMI,OAiBQa,YAAU,GAAG3B,UAAU,aAAaE,IAAKQ,EAAMI,KAAKc,KAC1ExB,IAAKM,EAAMI,KAAKe,OACrB,yBAAK7B,UAAU,cACX,wBAAIA,UAAU,gBAAgBU,EAAMI,KAAKe,MACzC,yBAAK7B,UAAU,eACX,4BAAQuB,KAAK,SAASvB,UAAS,sBAAiBiB,GAAW,kCACnDO,QApBxB,WACId,EAAMoB,WAAWpB,EAAMI,SAoBX,0BAAMd,UAAU,mBAAmBU,EAAMI,KAAKI,MAAMa,YCKzDC,MAlCf,SAActB,GACV,IAAMC,EAAcJ,IAAMK,WAAWN,GACrC,OACI,oCACI,6BAASN,UAAU,WACf,yBACIA,UAAU,kBACVI,IAAI,mDACJF,IAAKS,EAAYsB,SAGrB,yBAAKT,QAASd,EAAMwB,aAAclC,UAAU,0BAC5C,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,iBACX,wBAAIA,UAAU,kBAAkBW,EAAYkB,MAC5C,4BAAQL,QAASd,EAAMyB,cAAenC,UAAU,wBAAwBuB,KAAK,YAEjF,uBAAGvB,UAAU,qBAAqBW,EAAYyB,QAElD,4BAAQpC,UAAU,wBAAwBuB,KAAK,UAC3C,yBAAKC,QAASd,EAAM2B,WAAYnC,IAAKoC,IAAMlC,IAAI,+BAGvD,6BAASJ,UAAU,QACdU,EAAM6B,MAAMC,KAAI,SAAC1B,GAAD,OACb,kBAAC,EAAD,CAAMO,IAAKP,EAAKE,IAAKF,KAAMA,EAAMY,WAAYhB,EAAM+B,YAAaX,WAAYpB,EAAMoB,WAC5EL,aAAcf,EAAMe,qB,gBCZ/BiB,MAjBf,SAAuBhC,GAEnB,OACI,6BAASY,GAAIZ,EAAMmB,KAAM7B,UAAS,gBAAWU,EAAMiC,QAAU,uBACzD,yBAAK3C,UAAU,oBACX,4BAAQA,UAAU,sBAAsBuB,KAAK,UACzC,yBAAKvB,UAAU,eAAeE,IAAK0C,IAAOxC,IAAI,6CAAUoB,QAASd,EAAMmC,SAE3E,wBAAI7C,UAAU,iBAAiBU,EAAMoC,OACpCpC,EAAMqC,SACP,4BAAQxB,KAAK,SAASvB,UAAU,aAAawB,QAASd,EAAMsC,UAA5D,6DCQDC,MAlBf,SAAoBvC,GAChB,OACI,6BAASV,UAAS,gBAAWU,EAAMiC,QAAU,sBAAwBrB,GAAG,eACpE,yBAAKtB,UAAU,sBACX,4BACIwB,QAASd,EAAMwC,QACflD,UAAU,8CACVuB,KAAK,UAEL,yBAAKvB,UAAU,eAAeE,IAAK0C,IAAOxC,IAAI,gDAGlD,yBAAKJ,UAAU,cAAcE,IAAKQ,EAAMyC,MAAMvB,KAAMxB,IAAKM,EAAMyC,MAAMtB,OACrE,wBAAI7B,UAAU,eAAeU,EAAMyC,MAAMtB,SCmC1CuB,MA7Cf,SAAyB1C,GACrB,IAAMC,EAAcJ,IAAMK,WAAWN,GAC/B+C,EAAY9C,IAAM+C,SAFI,EAGA/C,IAAMgD,SAAS,IAHf,mBAGrBtB,EAHqB,KAGbuB,EAHa,KAsB5B,OAjBAjD,IAAMkD,WAAU,WACZD,EAAU7C,EAAYsB,UACvB,CAACtB,IAiBA,kBAAC,EAAD,CAAekB,KAAM,SAAUiB,MAAO,wFAAmBY,WAAY,yDAAaV,SAftF,SAAsBW,GAClBA,EAAEC,iBACFlD,EAAMmD,eAAe,CACb5B,OAAQoB,EAAUS,QAAQC,SAanBhB,SAAU,0BAAM/C,UAAU,gBAAgB6B,KAAK,OAAOmC,OAAO,OAAOC,OAAO,KACvE,8BAAUjE,UAAU,iBAChB,2BACIkE,IAAKb,EACLU,MAAO9B,GAAU,GACjBjC,UAAU,gEACVuB,KAAK,MACLM,KAAK,OACLP,GAAG,cACH6C,UAAQ,EACRC,YAAY,qGACZC,SAnB/B,SAA4BV,GACxBH,EAAUG,EAAEW,OAAOP,WAqBA,0BAAMzC,GAAG,oBAAoBtB,UAAU,iBAE3C2C,OAAQjC,EAAMiC,OAAQE,MAAOnC,EAAMwC,WCgC3CqB,MA1Ef,SAA0B7D,GACtB,IAAMC,EAAcJ,IAAMK,WAAWN,GADR,EAELC,IAAMgD,SAAS,IAFV,mBAEtB1B,EAFsB,KAEhB2C,EAFgB,OAGSjE,IAAMgD,SAAS,IAHxB,mBAGtBkB,EAHsB,KAGTC,EAHS,KA2B7B,OAvBAnE,IAAMkD,WAAU,WACZe,EAAQ7D,EAAYkB,MACpB6C,EAAe/D,EAAYyB,SAC5B,CAACzB,IAqBA,kBAAC,EAAD,CAAekB,KAAM,cAAeiB,MAAO,4HAAyBY,WAAY,yDACjEV,SApBnB,SAAsBW,GAClBA,EAAEC,iBACFlD,EAAMiE,aAAa,CACf9C,KAAMA,EACNO,MAAOqC,KAiBI9B,OAAQjC,EAAMiC,OAAQE,MAAOnC,EAAMwC,QAASH,SAAU,0BACjE/C,UAAU,OACVsB,GAAG,WACHO,KAAK,OACLmC,OAAO,OACPC,OAAO,IACPW,YAAU,GAEV,8BAAU5E,UAAU,cAChB,2BACIA,UAAU,2BACVuB,KAAK,OACLwC,MAAOlC,GAAQ,GACfA,KAAK,OACLP,GAAG,aACH6C,UAAQ,EACRU,QAAQ,4CACRC,UAAU,IACVC,UAAU,KACVV,SA/BhB,SAA0BV,GACtBa,EAAQb,EAAEW,OAAOP,WAiCb,0BAAMzC,GAAG,mBAAmBtB,UAAU,gBACtC,8BAAUA,UAAU,iBAChB,2BACIA,UAAU,8BACVuB,KAAK,OACLM,KAAK,OACLkC,MAAOU,GAAe,GACtBnD,GAAG,aACH6C,UAAQ,EACRU,QAAQ,4CACRC,UAAU,IACVC,UAAU,MACVV,SA1ChB,SAAiCV,GAC7Be,EAAef,EAAEW,OAAOP,WA4CpB,0BAAMzC,GAAG,mBAAmBtB,UAAU,oBCJnCgF,MA/Df,SAAuBtE,GACnB,IAAMC,EAAcJ,IAAMK,WAAWN,GAC/B2E,EAAY1E,IAAM+C,SAFE,EAGF/C,IAAMgD,SAAS,IAHb,mBAGnB3B,EAHmB,KAGbsD,EAHa,KAuB1B,OAlBA3E,IAAMkD,WAAU,WACZyB,EAAQvE,EAAYiB,QACrB,CAACjB,IAiBA,kBAAC,EAAD,CAAekB,KAAM,cAAeiB,MAAO,gEAAeY,WAAY,yDACvDV,SAhBnB,SAA8BW,GAC1BA,EAAEC,iBACFlD,EAAMyE,cAAc,CAChBtD,KAAMoD,EAAUnB,QAAQC,MACxBnC,KAAMA,KAaKe,OAAQjC,EAAMiC,OAAQE,MAAOnC,EAAMwC,QACnCH,SAAU,0BAAM/C,UAAU,gBAAgB6B,KAAK,OAAOmC,OAAO,OAAOC,OAAO,KACvE,8BAAUjE,UAAU,cAChB,2BACIA,UAAU,2CACVuB,KAAK,OACLM,KAAK,OACLuD,aAAc,GACd9D,GAAG,aACH6C,UAAQ,EACRU,QAAQ,4CACRC,UAAU,IACVC,UAAU,KACVX,YAAY,mDACZF,IAAKe,KAGb,0BAAM3D,GAAG,mBAAmBtB,UAAU,gBACtC,8BAAUA,UAAU,iBAChB,2BACIA,UAAU,8CACVuB,KAAK,MACLM,KAAK,OACLkC,MAAOnC,GAAQ,GACfN,GAAG,aACH6C,UAAQ,EACRC,YAAY,qGACZC,SAnC/B,SAA0BV,GACtBuB,EAAQvB,EAAEW,OAAOP,WAqCE,0BAAMzC,GAAG,mBAAmBtB,UAAU,oB,eC+ElDqF,EADH,I,WAlIR,WAAYC,GAAU,oBAClBC,KAAKC,QAAUF,EAAQE,QACvBD,KAAKE,QAAUH,EAAQG,Q,0DAIvB,OAAOC,MAAM,GAAD,OAAIH,KAAKC,QAAT,aAA6B,CACrCC,QAASF,KAAKE,UAEbE,MAAK,SAACC,GACH,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAR,eAAuBJ,EAAIK,c,wCAK1C,OAAOP,MAAM,GAAD,OAAIH,KAAKC,QAAT,UAA0B,CAClCC,QAASF,KAAKE,UAEbE,MAAK,SAACC,GACH,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAR,eAAuBJ,EAAIK,c,qCAI/BC,EAAUC,GACrB,OAAOT,MAAM,GAAD,OAAIH,KAAKC,QAAT,aAA6B,CACrCxB,OAAQ,QACRyB,QAASF,KAAKE,QACdW,KAAMC,KAAKC,UAAU,CACjBzE,KAAMqE,EACN9D,MAAO+D,MAGVR,MAAK,SAACC,GACH,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAR,eAAuBJ,EAAIK,c,iCAInCM,EAAUC,GACjB,OAAOd,MAAM,GAAD,OAAIH,KAAKC,QAAT,UAA0B,CAClCxB,OAAQ,OACRyB,QAASF,KAAKE,QACdW,KAAMC,KAAKC,UAAU,CACjBzE,KAAM0E,EACN3E,KAAM4E,MAGTb,MAAK,SAACC,GACH,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAR,eAAuBJ,EAAIK,c,iCAKnC3E,GACP,OAAOoE,MAAM,GAAD,OAAIH,KAAKC,QAAT,kBAA0BlE,GAAM,CACxC0C,OAAQ,SACRyB,QAASF,KAAKE,UAGbE,MAAK,SAACC,GACH,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAR,eAAuBJ,EAAIK,c,8BAMtCQ,GAEJ,OAAOf,MAAM,GAAD,OAAIH,KAAKC,QAAT,wBAAgCiB,GAAU,CAClDzC,OAAQ,MACRyB,QAASF,KAAKE,UAEbE,MAAK,SAACC,GACH,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAR,gDAA0BJ,EAAIK,OAA9B,YAAwCL,EAAIc,gBAEtDf,MAAK,SAACgB,GAAD,OAAUA,O,iCAGbF,GACP,OAAOf,MAAM,GAAD,OAAIH,KAAKC,QAAT,wBAAgCiB,GAAU,CAClDzC,OAAQ,SACRyB,QAASF,KAAKE,UAEbE,MAAK,SAACC,GACH,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAR,gDAA0BJ,EAAIK,OAA9B,YAAwCL,EAAIc,gBAEtDf,MAAK,SAACgB,GAAD,OAAUA,O,oCAGVC,GACV,OAAOlB,MAAM,GAAD,OAAIH,KAAKC,QAAT,oBAAoC,CACxCxB,OAAQ,QACRyB,QAASF,KAAKE,QACdW,KAAMC,KAAKC,UAAU,CACjBrE,OAAO,GAAD,OAAK2E,EAAW3E,YAM7B0D,MAAK,SAACC,GACH,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAR,gDAA0BJ,EAAIK,OAA9B,YAAwCL,EAAIc,oB,KAMvD,CA3IS,CACjBlB,QAAS,8CACTC,QAAS,CACLoB,cAAe,uCACf,eAAgB,sBC0JTC,MAhJf,WAAgB,IAAD,EAE2BvG,IAAMgD,SAAS,IAF1C,mBAEJ5C,EAFI,KAESoG,EAFT,OAG6BxG,IAAMgD,SAAS,IAH5C,mBAGUyD,GAHV,aAIezG,IAAMgD,SAAS,IAJ9B,mBAIJhB,EAJI,KAIG0E,EAJH,KAMX1G,IAAMkD,WAAU,WACZsC,QAAQmB,IAAI,CAAC7B,EAAI8B,cAAe9B,EAAI+B,oBAC/BzB,MAAK,YAAoB,IAAD,mBAAjB0B,EAAiB,KAAX9E,EAAW,KACrBwE,EAAeM,GACfJ,EAAS1E,MAEZ+E,OAAM,SAACC,GACJC,QAAQC,IAAIF,QAErB,IAfQ,MAiBuBhH,IAAMgD,SAAS,CAC7C3B,KAAM,GACNC,KAAM,KAnBC,mBAiBJ6F,EAjBI,KAiBOC,EAjBP,OAqBiDpH,IAAMgD,UAAS,GArBhE,mBAqBJqE,EArBI,KAqBoBC,EArBpB,OAsB+CtH,IAAMgD,UAAS,GAtB9D,mBAsBJuE,EAtBI,KAsBmBC,EAtBnB,OAuB2CxH,IAAMgD,UAAS,GAvB1D,mBAuBJyE,EAvBI,KAuBiBC,EAvBjB,OAwB6B1H,IAAMgD,UAAS,GAxB5C,mBAwBJ2E,EAxBI,KAwBUC,EAxBV,KA2BX,SAASC,IACLL,GAAyB,GACzBF,GAA0B,GAC1BI,GAAuB,GACvBE,GAAgB,GAoFpB,OACI,oCAEI,yBAAKnI,UAAU,QACX,kBAACM,EAAmB+H,SAApB,CAA6BtE,MAAOpD,GAChC,kBAAC,EAAD,MAEA,kBAAC,EAAD,CAAMwB,cAxFtB,WACI0F,GAA0B,IAuF+BxF,WA/E7D,WACI4F,GAAuB,IA+EL/F,aA5EtB,WACI6F,GAAyB,IA2E8BxF,MAAOA,EAC5CT,WAzEtB,SAAwBhB,GAEpB,IAAMG,EAAUH,EAAKI,MAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEJ,MAAQL,EAAYK,OAG3DqE,EAAIiD,QAAQxH,EAAKE,KAAMC,GAAS0E,MAAK,SAAC4C,GAElC,IAAMC,EAAWjG,EAAMC,KAAI,SAACiG,GAAD,OAAOA,EAAEzH,MAAQF,EAAKE,IAAMuH,EAAUE,KAEjExB,EAASuB,MAEbnD,EAAIqD,WAAW5H,EAAKE,IAAKC,GAAS0E,MAAK,SAAC4C,GAEpC,IAAMC,EAAWjG,EAAMC,KAAI,SAACiG,GAAD,OAAOA,EAAEzH,MAAQF,EAAKE,IAAMuH,EAAUE,KAEjExB,EAASuB,OA0DiC/G,aArDlD,SAA0BX,GAGtBuE,EAAIsD,WAAW7H,EAAKE,KAAK2E,MAAK,WAE1B,IAAM6C,EAAWjG,EAAMqG,QAAO,SAACH,GAAD,OAAOA,EAAEzH,MAAQF,EAAKE,OAEpDiG,EAASuB,OA8CiE/F,YAtFlF,SAAyB/B,GACrByH,GAAgB,GAChBR,EAAa,CAAC/F,KAAMlB,EAAMkB,KAAMC,KAAMnB,EAAMmB,UAuFhC,kBAAC,EAAD,CAAiBc,OAAQmF,EAAuB5E,QAASkF,EACxCvE,eAxBjC,SAA4B8C,GACxBtB,EAAIwD,cAAclC,GAAMhB,MAAK,SAACmD,GAC1B/B,EAAe+B,GACfV,OAECd,OAAM,SAACC,GACJC,QAAQC,IAAR,gDAAuBF,UAmBnB,kBAAC,EAAD,CAAkB5E,OAAQiF,EAAwB1E,QAASkF,EACzCzD,aAhDlC,SAA0BgC,GACtBtB,EAAI0D,eAAepC,EAAK9E,KAAM8E,EAAKvE,OAAOuD,MAAK,SAACmD,GAC5C/B,EAAe+B,GACfV,OAECd,OAAM,SAACC,GACJC,QAAQC,IAAR,gDAAuBF,UA2CnB,kBAAC,EAAD,CAAe5E,OAAQqF,EAAqB9E,QAASkF,EACtCjD,cAxC/B,SAA2BwB,GACvBtB,EAAI2D,WAAWrC,EAAK9E,KAAM8E,EAAK/E,MAAM+D,MAAK,SAACmD,GACvC9B,EAAgB8B,GAChB7B,EAAS,GAAD,mBAAK1E,GAAL,CAAYuG,KACpBV,OAECd,OAAM,SAACC,GACJC,QAAQC,IAAR,gDAAuBF,UAmCnB,kBAAC,EAAD,CAAe1F,KAAM,OAAQiB,MAAO,2DAAeY,WAAY,iBAC/D,kBAAC,EAAD,CAAYf,OAAQuF,EAAchF,QAASkF,EAAgBjF,MAAOuE,IAElE,kBAAC,EAAD,UC3IAuB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlE,MAAK,SAAAmE,GACJA,EAAaC,gBAEdzC,OAAM,SAAA0C,GACLxC,QAAQwC,MAAMA,EAAMC,c","file":"static/js/main.75cb55f4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/crest.c2d0901f.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.855a8c98.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.bdfb8ebb.svg\";","import React from 'react';\r\nimport logo from '../images/logo.svg';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <a className=\"header__container\" href=\"#\"\r\n            ><img\r\n                className=\"header__logo\"\r\n                src={logo}\r\n                alt=\"Логотип Россия\"\r\n            />\r\n            </a>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copyright\">&copy; 2020 Marina Kuznetsova</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nexport const CurrentUserContext = React.createContext();","import React from 'react';\r\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\r\n\r\n\r\nfunction Card(props) {\r\n\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    const isOwn = props.card.owner._id === currentUser._id;\r\n\r\n    function handleClick() {\r\n        props.onCardCick(props.card)\r\n    }\r\n\r\n    function handleLikeClick() {\r\n        props.onCardLike(props.card)\r\n    }\r\n\r\n    function handleCardDelete() {\r\n        props.onCardDelete(props.card)\r\n    }\r\n\r\n    const isLiked = props.card.likes.some(i => i._id === currentUser._id);\r\n\r\n    return (\r\n        <div className=\"card\" key={props.card._id} id={props.card._id}>\r\n            <button type=\"button\" className={`card__delete ${!isOwn && 'card__delete card__delete_invisible'}`}\r\n                    onClick={handleCardDelete}></button>\r\n            <img onClick={handleClick} data-name=\"\" className=\"card__item\" src={props.card.link}\r\n                 alt={props.card.name}/>\r\n            <div className=\"card__text\">\r\n                <h3 className=\"card__header\">{props.card.name}</h3>\r\n                <div className=\"card__likes\">\r\n                    <button type=\"button\" className={`card__heart ${isLiked && 'card__heart card__heart_active'}`}\r\n                            onClick={handleLikeClick}></button>\r\n                    <span className=\"card__span-like\">{props.card.likes.length}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport plus from \"../images/plus.svg\";\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\nimport Card from \"./Card\";\r\n\r\n\r\nfunction Main(props) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    return (\r\n        <>\r\n            <section className=\"profile\">\r\n                <img\r\n                    className=\"profile__avatar\"\r\n                    alt=\"Аватарка\"\r\n                    src={currentUser.avatar}\r\n\r\n                />\r\n                <div onClick={props.onEditAvatar} className=\"profile__avatar_hover\"></div>\r\n                <div className=\"profile__container\">\r\n                    <div className=\"profile__info\">\r\n                        <h1 className=\"profile__title\">{currentUser.name}</h1>\r\n                        <button onClick={props.onEditProfile} className=\"profile__button-small\" type=\"button\"></button>\r\n                    </div>\r\n                    <p className=\"profile__subtitle\">{currentUser.about}</p>\r\n                </div>\r\n                <button className=\"profile__button-large\" type=\"button\">\r\n                    <img onClick={props.onAddPlace} src={plus} alt=\"Плюс\"/>\r\n                </button>\r\n            </section>\r\n            <section className=\"grid\">\r\n                {props.cards.map((card) => (\r\n                    <Card key={card._id} card={card} onCardCick={props.onCardClick} onCardLike={props.onCardLike}\r\n                          onCardDelete={props.onCardDelete}/>\r\n                ))}\r\n            </section>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport cross from '../images/crest.svg';\r\n\r\nfunction PopupWithForm(props) {\r\n\r\n    return (\r\n        <section id={props.name} className={`popup ${props.isOpen && 'popup popup_opened'}`}>\r\n            <div className=\"popup__container\">\r\n                <button className=\"popup__button-close\" type=\"button\">\r\n                    <img className=\"popup__cross\" src={cross} alt=\"Закрыть\" onClick={props.close}/>\r\n                </button>\r\n                <h2 className=\"form__heading\">{props.title}</h2>\r\n                {props.children}\r\n                <button type=\"submit\" className=\"form__save\" onClick={props.onSubmit}>Сохранить</button>\r\n\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default PopupWithForm;","import React from \"react\";\r\nimport cross from '../images/crest.svg';\r\n\r\nfunction ImagePopup(props) {\r\n    return (\r\n        <section className={`popup ${props.isOpen && 'popup popup_opened'}`} id=\"picture-big\">\r\n            <div className=\"popup__enlargement\">\r\n                <button\r\n                    onClick={props.onClose}\r\n                    className=\"popup__button-close popup__button-close_big\"\r\n                    type=\"button\"\r\n                >\r\n                    <img className=\"popup__cross\" src={cross} alt=\"Закрыть\"/>\r\n                </button>\r\n\r\n                <img className=\"popup__item\" src={props.image.link} alt={props.image.name}/>\r\n                <h3 className=\"popup__name\">{props.image.name}</h3>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\nexport default ImagePopup;","import React from 'react';\r\n\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\n\r\n\r\nfunction EditAvatarPopup(props) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const avatarRef = React.useRef();\r\n    const [avatar, setAvatar] = React.useState('');\r\n\r\n    React.useEffect(() => {\r\n        setAvatar(currentUser.avatar);\r\n    }, [currentUser]);\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.onUpdateAvatar({\r\n                avatar: avatarRef.current.value\r\n            }\r\n        );\r\n    }\r\n\r\n    function handleAvatarChange(e) {\r\n        setAvatar(e.target.value);\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <PopupWithForm name={'avatar'} title={'Обновить аватар'} buttonText={'Сохранить'} onSubmit={handleSubmit}\r\n                       children={<form className=\"form form-add\" name=\"form\" method=\"post\" action=\"#\">\r\n                           <fieldset className=\"form__subject\">\r\n                               <input\r\n                                   ref={avatarRef}\r\n                                   value={avatar || ''}\r\n                                   className=\"text-form text-form_subject place-form_link text-form__avatar\"\r\n                                   type=\"url\"\r\n                                   name=\"link\"\r\n                                   id=\"link-avatar\"\r\n                                   required\r\n                                   placeholder=\"Ссылка на картинку\"\r\n                                   onChange={handleAvatarChange}\r\n                               />\r\n                           </fieldset>\r\n                           <span id=\"link-avatar-error\" className=\"form__error\"></span>\r\n                       </form>}\r\n                       isOpen={props.isOpen} close={props.onClose}/>\r\n    );\r\n}\r\n\r\nexport default EditAvatarPopup;","import React from 'react';\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\n\r\n\r\nfunction EditProfilePopup(props) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const [name, setName] = React.useState('');\r\n    const [description, setDescription] = React.useState('');\r\n    React.useEffect(() => {\r\n        setName(currentUser.name);\r\n        setDescription(currentUser.about);\r\n    }, [currentUser]);\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.onUpdateUser({\r\n            name: name,\r\n            about: description\r\n        });\r\n    }\r\n\r\n\r\n    function handleNameChange(e) {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    function handleDescriptionChange(e) {\r\n        setDescription(e.target.value);\r\n\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm name={'information'} title={'Редактировать профиль'} buttonText={'Сохранить'}\r\n                       onSubmit={handleSubmit}\r\n                       isOpen={props.isOpen} close={props.onClose} children={<form\r\n            className=\"form\"\r\n            id=\"formname\"\r\n            name=\"form\"\r\n            method=\"post\"\r\n            action=\"#\"\r\n            noValidate\r\n        >\r\n            <fieldset className=\"form__name\">\r\n                <input\r\n                    className=\"text-form text-form_name\"\r\n                    type=\"text\"\r\n                    value={name || ''}\r\n                    name=\"name\"\r\n                    id=\"name-input\"\r\n                    required\r\n                    pattern=\"^[A-Za-zА-Яа-я\\s-]+$\"\r\n                    minLength=\"2\"\r\n                    maxLength=\"40\"\r\n                    onChange={handleNameChange}\r\n                />\r\n            </fieldset>\r\n            <span id=\"name-input-error\" className=\"form__error\"></span>\r\n            <fieldset className=\"form__subject\">\r\n                <input\r\n                    className=\"text-form text-form_subject\"\r\n                    type=\"text\"\r\n                    name=\"link\"\r\n                    value={description || ''}\r\n                    id=\"profession\"\r\n                    required\r\n                    pattern=\"^[A-Za-zА-Яа-я\\s-]+$\"\r\n                    minLength=\"2\"\r\n                    maxLength=\"200\"\r\n                    onChange={handleDescriptionChange}\r\n                />\r\n            </fieldset>\r\n            <span id=\"profession-error\" className=\"form__error\"></span>\r\n        </form>}\r\n        />\r\n\r\n    );\r\n}\r\n\r\nexport default EditProfilePopup;","import React from 'react';\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\n\r\n\r\nfunction AddPlacePopup(props) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const inputName = React.useRef();\r\n    const [link, setLink] = React.useState('');\r\n\r\n    React.useEffect(() => {\r\n        setLink(currentUser.link);\r\n    }, [currentUser]);\r\n\r\n    function handleAddPlaceSubmit(e) {\r\n        e.preventDefault();\r\n        props.onUpdatePlace({\r\n            name: inputName.current.value,\r\n            link: link\r\n        });\r\n    }\r\n\r\n\r\n    function handleLinkChange(e) {\r\n        setLink(e.target.value);\r\n\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm name={'picture-add'} title={'Новое место'} buttonText={'Сохранить'}\r\n                       onSubmit={handleAddPlaceSubmit}\r\n                       isOpen={props.isOpen} close={props.onClose}\r\n                       children={<form className=\"form form-add\" name=\"form\" method=\"post\" action=\"#\">\r\n                           <fieldset className=\"form__name\">\r\n                               <input\r\n                                   className=\"text-form text-form_name place-form_name\"\r\n                                   type=\"text\"\r\n                                   name=\"name\"\r\n                                   defaultValue={''}\r\n                                   id=\"name-place\"\r\n                                   required\r\n                                   pattern=\"^[A-Za-zА-Яа-я\\s-]+$\"\r\n                                   minLength=\"1\"\r\n                                   maxLength=\"30\"\r\n                                   placeholder=\"Название\"\r\n                                   ref={inputName}\r\n                               />\r\n                           </fieldset>\r\n                           <span id=\"name-place-error\" className=\"form__error\"></span>\r\n                           <fieldset className=\"form__subject\">\r\n                               <input\r\n                                   className=\"text-form text-form_subject place-form_link\"\r\n                                   type=\"url\"\r\n                                   name=\"link\"\r\n                                   value={link || ''}\r\n                                   id=\"link-place\"\r\n                                   required\r\n                                   placeholder=\"Ссылка на картинку\"\r\n                                   onChange={handleLinkChange}\r\n                               />\r\n                           </fieldset>\r\n                           <span id=\"link-place-error\" className=\"form__error\"></span>\r\n                       </form>}\r\n        />\r\n\r\n    );\r\n}\r\n\r\nexport default AddPlacePopup;","export const token = {\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-12',\r\n    headers: {\r\n        authorization: 'a737011d-02cf-4531-980a-f0cf56195ed9',\r\n        'Content-Type': 'application/json'\r\n    },\r\n};\r\n\r\nclass Api {\r\n    constructor(options) {\r\n        this.baseUrl = options.baseUrl;\r\n        this.headers = options.headers;\r\n    }\r\n\r\n    getUserInfo() {\r\n        return fetch(`${this.baseUrl}/users/me`, {\r\n            headers: this.headers,\r\n        })\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`error${res.status}`);\r\n            });\r\n    }\r\n\r\n    getInitialCards() {\r\n        return fetch(`${this.baseUrl}/cards`, {\r\n            headers: this.headers,\r\n        })\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`error${res.status}`);\r\n            });\r\n    }\r\n\r\n    updateUserInfo(userName, userJob) {\r\n        return fetch(`${this.baseUrl}/users/me`, {\r\n            method: 'PATCH',\r\n            headers: this.headers,\r\n            body: JSON.stringify({\r\n                name: userName,\r\n                about: userJob,\r\n            }),\r\n        })\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`error${res.status}`);\r\n            });\r\n    }\r\n\r\n    addNewCard(cardName, cardLink) {\r\n        return fetch(`${this.baseUrl}/cards`, {\r\n            method: 'POST',\r\n            headers: this.headers,\r\n            body: JSON.stringify({\r\n                name: cardName,\r\n                link: cardLink,\r\n            }),\r\n        })\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`error${res.status}`);\r\n            });\r\n    }\r\n\r\n\r\n    deleteCard(id) {\r\n        return fetch(`${this.baseUrl}/cards/${id}`, {\r\n            method: 'DELETE',\r\n            headers: this.headers,\r\n\r\n        })\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`error${res.status}`);\r\n            });\r\n\r\n    };\r\n\r\n\r\n    putLike(cardId) {\r\n\r\n        return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\r\n            method: 'PUT',\r\n            headers: this.headers\r\n        })\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status} ${res.statusText}`);\r\n            })\r\n            .then((data) => data);\r\n    }\r\n\r\n    deleteLike(cardId) {\r\n        return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\r\n            method: 'DELETE',\r\n            headers: this.headers\r\n        })\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status} ${res.statusText}`);\r\n            })\r\n            .then((data) => data);\r\n    }\r\n\r\n    setUserAvatar(userAvatar) {\r\n        return fetch(`${this.baseUrl}/users/me/avatar`, {\r\n                method: 'PATCH',\r\n                headers: this.headers,\r\n                body: JSON.stringify({\r\n                    avatar: `${userAvatar.avatar}`\r\n                })\r\n            }\r\n        )\r\n\r\n\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status} ${res.statusText}`);\r\n            })\r\n\r\n    }\r\n}\r\n\r\nconst api = new Api(token);\r\nexport default api;","import React from 'react';\r\nimport './App.css';\r\nimport Header from \"./Header.js\";\r\nimport Footer from \"./Footer.js\";\r\nimport Main from \"./Main.js\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport ImagePopup from \"./ImagePopup.js\";\r\nimport EditAvatarPopup from \"./EditAvatarPopup.js\";\r\nimport EditProfilePopup from \"./EditProfilePopup.js\";\r\nimport AddPlacePopup from \"./AddPlacePopup.js\";\r\nimport api from \"../utils/Api\";\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\n\r\n\r\nfunction App() {\r\n\r\n    const [currentUser, setCurrentUser] = React.useState({});\r\n    const [currentPlace, setCurrentPlace] = React.useState({});\r\n    const [cards, setCards] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        Promise.all([api.getUserInfo(), api.getInitialCards()])\r\n            .then(([user, cards]) => {\r\n                setCurrentUser(user);\r\n                setCards(cards);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, []);\r\n\r\n    const [dataImage, setDataImage] = React.useState({\r\n        link: '',\r\n        name: ''\r\n    });\r\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\r\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\r\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n    const [selectedCard, setSelectedCard] = React.useState(false);\r\n\r\n\r\n    function closeAllPopups() {\r\n        setIsEditAvatarPopupOpen(false);\r\n        setIsEditProfilePopupOpen(false);\r\n        setIsAddPlacePopupOpen(false);\r\n        setSelectedCard(false);\r\n    }\r\n\r\n    function handleEditProfileClick() {\r\n        setIsEditProfilePopupOpen(true);\r\n    }\r\n\r\n    function handleCardClick(props) {\r\n        setSelectedCard(true);\r\n        setDataImage({link: props.link, name: props.name});\r\n    }\r\n\r\n    function handleAddPlaceClick() {\r\n        setIsAddPlacePopupOpen(true);\r\n    }\r\n\r\n    function handleEditAvatarClick() {\r\n        setIsEditAvatarPopupOpen(true);\r\n    }\r\n\r\n    function handleCardLike(card) {\r\n        // Снова проверяем, есть ли уже лайк на этой карточке\r\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n\r\n        // Отправляем запрос в API и получаем обновлённые данные карточки\r\n        api.putLike(card._id, !isLiked).then((newCard) => {\r\n            // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\r\n            const newCards = cards.map((c) => c._id === card._id ? newCard : c);\r\n            // Обновляем стейт\r\n            setCards(newCards);\r\n        });\r\n        api.deleteLike(card._id, isLiked).then((newCard) => {\r\n            // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\r\n            const newCards = cards.map((c) => c._id === card._id ? newCard : c);\r\n            // Обновляем стейт\r\n            setCards(newCards);\r\n        });\r\n    }\r\n\r\n\r\n    function handleCardDelete(card) {\r\n\r\n        // Отправляем запрос в API и получаем обновлённые данные карточки\r\n        api.deleteCard(card._id).then(() => {\r\n            // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\r\n            const newCards = cards.filter((c) => c._id !== card._id);\r\n            // Обновляем стейт\r\n            setCards(newCards);\r\n        });\r\n    }\r\n\r\n    function handleUpdateUser(data) {\r\n        api.updateUserInfo(data.name, data.about).then((r) => {\r\n            setCurrentUser(r);\r\n            closeAllPopups()\r\n        })\r\n            .catch((err) => {\r\n                console.log(`Ошибка: ${err}`);\r\n            })\r\n    }\r\n\r\n    function handleUpdatePlace(data) {\r\n        api.addNewCard(data.name, data.link).then((r) => {\r\n            setCurrentPlace(r);\r\n            setCards([...cards, r]);\r\n            closeAllPopups()\r\n        })\r\n            .catch((err) => {\r\n                console.log(`Ошибка: ${err}`);\r\n            })\r\n    }\r\n\r\n\r\n    function handleUpdateAvatar(data) {\r\n        api.setUserAvatar(data).then((r) => {\r\n            setCurrentUser(r);\r\n            closeAllPopups()\r\n        })\r\n            .catch((err) => {\r\n                console.log(`Ошибка: ${err}`);\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"page\">\r\n                <CurrentUserContext.Provider value={currentUser}>\r\n                    <Header/>\r\n\r\n                    <Main onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick}\r\n                          onEditAvatar={handleEditAvatarClick} cards={cards}\r\n                          onCardLike={handleCardLike} onCardDelete={handleCardDelete} onCardClick={handleCardClick}\r\n                    />\r\n\r\n                    <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}\r\n                                     onUpdateAvatar={handleUpdateAvatar}/>\r\n                    <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}\r\n                                      onUpdateUser={handleUpdateUser}/>\r\n                    <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}\r\n                                   onUpdatePlace={handleUpdatePlace}/>\r\n\r\n                    <PopupWithForm name={'sure'} title={'Вы уверены?'} buttonText={'Да'}/>\r\n                    <ImagePopup isOpen={selectedCard} onClose={closeAllPopups} image={dataImage}/>\r\n\r\n                    <Footer/>\r\n                </CurrentUserContext.Provider>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}