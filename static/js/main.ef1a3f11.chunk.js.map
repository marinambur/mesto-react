{"version":3,"sources":["images/crest.svg","images/logo.svg","images/plus.svg","components/Header.js","components/Footer.js","components/Card.js","utils/Api.js","components/Main.js","components/PopupWithForm.js","components/InformationPopup.js","components/AvatarPopup.js","components/PictureAddPopup.js","components/ImagePopup.js","components/SurePopup.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","href","src","logo","alt","Footer","Card","props","key","card","_id","id","type","onClick","onCardCick","data-name","link","name","likes","length","api","options","this","baseUrl","headers","fetch","then","res","ok","json","Promise","reject","status","userName","userJob","method","body","JSON","stringify","about","cardName","cardLink","cardId","statusText","data","userAvatar","avatar","authorization","Main","React","useState","setAvatar","setName","description","setDescription","cards","setCards","useEffect","all","getUserInfo","getInitialCards","user","catch","err","console","log","onEditAvatar","onEditProfile","onAddPlace","plus","map","onCardClick","PopupWithForm","isOpen","cross","close","title","children","buttonText","InformationPopup","action","noValidate","required","pattern","defaultValue","minLength","maxLength","AvatarPopup","placeholder","PictureAddPopup","ImagePopup","onClose","image","SurePopup","App","dataImage","setDataImage","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","closeAllPopups","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.ef1a3f11.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/crest.c2d0901f.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.855a8c98.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.bdfb8ebb.svg\";","import React from 'react';\r\nimport logo from '../images/logo.svg';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <a className=\"header__container\" href=\"#\"\r\n            ><img\r\n                className=\"header__logo\"\r\n                src={logo}\r\n                alt=\"Логотип Россия\"\r\n            />\r\n            </a>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copyright\">&copy; 2020 Marina Kuznetsova</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\n\r\nfunction Card(props) {\r\n\r\n    function handleClick() {\r\n        props.onCardCick(props.card)\r\n    }\r\n\r\n    return (\r\n            <div className=\"card\" key={props.card._id} id={props.card._id}>\r\n                <button type=\"button\" className=\"card__delete\"></button>\r\n                    <img onClick={handleClick} data-name=\"\" className=\"card__item\" src={props.card.link}\r\n                         alt={props.card.name}/>\r\n                <div className=\"card__text\">\r\n                    <h3 className=\"card__header\">{props.card.name}</h3>\r\n                    <div className=\"card__likes\">\r\n                        <button type=\"button\" className=\"card__heart\"></button>\r\n                        <span className=\"card__span-like\">{props.card.likes.length}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Card;","\r\nexport const token = {\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-12',\r\n    headers: {\r\n        authorization: 'a737011d-02cf-4531-980a-f0cf56195ed9',\r\n        'Content-Type': 'application/json'\r\n    },\r\n};\r\n\r\nclass Api {\r\n    constructor(options) {\r\n        this.baseUrl = options.baseUrl;\r\n        this.headers = options.headers;\r\n    }\r\n\r\n    getUserInfo() {\r\n        return fetch(`${this.baseUrl}/users/me`, {\r\n            headers: this.headers,\r\n        })\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`error${res.status}`);\r\n            });\r\n    }\r\n\r\n   getInitialCards() {\r\n        return fetch(`${this.baseUrl}/cards`, {\r\n            headers: this.headers,\r\n        })\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`error${res.status}`);\r\n            });\r\n    }\r\n\r\n    updateUserInfo(userName, userJob) {\r\n        return fetch(`${this.baseUrl}/users/me`, {\r\n            method: 'PATCH',\r\n            headers: this.headers,\r\n            body: JSON.stringify({\r\n                name: userName,\r\n                about: userJob,\r\n            }),\r\n        })\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`error${res.status}`);\r\n            });\r\n    }\r\n\r\n    addNewCard(cardName, cardLink) {\r\n        return fetch(`${this.baseUrl}/cards`, {\r\n            method: 'POST',\r\n            headers: this.headers,\r\n            body: JSON.stringify({\r\n                name: cardName,\r\n                link: cardLink,\r\n            }),\r\n        })\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`error${res.status}`);\r\n            });\r\n    }\r\n\r\n\r\n    deleteCard(id) {\r\n        return fetch(`${this.baseUrl}/cards/${id}`, {\r\n            method: 'DELETE',\r\n            headers: this.headers,\r\n\r\n        })\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`error${res.status}`);\r\n            });\r\n\r\n    };\r\n\r\n\r\n    putLike(cardId) {\r\n\r\n        return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\r\n            method: 'PUT',\r\n            headers: this.headers\r\n        })\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status} ${res.statusText}`);\r\n            })\r\n            .then((data) => data);\r\n    }\r\n\r\n    deleteLike(cardId) {\r\n        return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\r\n            method: 'DELETE',\r\n            headers: this.headers\r\n        })\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status} ${res.statusText}`);\r\n            })\r\n            .then((data) => data);\r\n    }\r\n\r\n    setUserAvatar(userAvatar) {\r\n        return fetch(`${this.baseUrl}/users/me/avatar`, {\r\n                method: 'PATCH',\r\n                headers: this.headers,\r\n                body: JSON.stringify({\r\n                    avatar: userAvatar\r\n                })\r\n            }\r\n        )\r\n\r\n\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status} ${res.statusText}`);\r\n            })\r\n\r\n    }\r\n}\r\n\r\nconst api = new Api(token);\r\nexport default api;","import React from 'react';\r\nimport plus from \"../images/plus.svg\";\r\nimport Card from \"./Card\";\r\nimport api from \"../utils/Api.js\"\r\n\r\n\r\nfunction Main(props) {\r\n    const [avatar, setAvatar] = React.useState();\r\n    const [name, setName] = React.useState();\r\n    const [description, setDescription] = React.useState();\r\n    const [cards, setCards] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        Promise.all([api.getUserInfo(), api.getInitialCards()])\r\n            .then(([user, cards]) => {\r\n                setAvatar(user.avatar);\r\n                setName(user.name);\r\n                setDescription(user.about);\r\n                setCards(cards);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, []);\r\n    return (\r\n        <>\r\n            <section className=\"profile\">\r\n                <img\r\n                    className=\"profile__avatar\" src={avatar}\r\n                    alt=\"Аватарка\"\r\n                />\r\n                <div onClick={props.onEditAvatar} className=\"profile__avatar_hover\"></div>\r\n                <div className=\"profile__container\">\r\n                    <div className=\"profile__info\">\r\n                        <h1 className=\"profile__title\">{name}</h1>\r\n                        <button onClick={props.onEditProfile} className=\"profile__button-small\" type=\"button\"></button>\r\n                    </div>\r\n                    <p className=\"profile__subtitle\">{description}</p>\r\n                </div>\r\n                <button className=\"profile__button-large\" type=\"button\">\r\n                    <img onClick={props.onAddPlace} src={plus} alt=\"Плюс\"/>\r\n                </button>\r\n            </section>\r\n            <section className=\"grid\">\r\n                {cards && cards.map((card) => (\r\n                    <Card key={card._id} card={card} onCardCick={props.onCardClick}/>\r\n                ))}\r\n            </section>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport cross from '../images/crest.svg';\r\n\r\nfunction PopupWithForm(props) {\r\n    return (\r\n        <section id={props.name} className={`popup ${props.isOpen && 'popup popup_opened'}`}>\r\n            <div className=\"popup__container\">\r\n                <button className=\"popup__button-close\" type=\"button\">\r\n                    <img className=\"popup__cross\" src={cross} alt=\"Закрыть\" onClick={props.close}/>\r\n                </button>\r\n                <h2 className=\"form__heading\">{props.title}</h2>\r\n                {props.children}\r\n                <button type=\"submit\" className=\"form__save\">{props.buttonText}</button>\r\n\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\n\r\nfunction InformationPopup() {\r\n    return (\r\n        <form\r\n            className=\"form\"\r\n            id=\"formname\"\r\n            name=\"form\"\r\n            method=\"post\"\r\n            action=\"#\"\r\n            noValidate\r\n        >\r\n            <fieldset className=\"form__name\">\r\n                <input\r\n                    className=\"text-form text-form_name\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"name-input\"\r\n                    required\r\n                    pattern=\"^[A-Za-zА-Яа-я\\s-]+$\"\r\n                    defaultValue=\"Имя\"\r\n                    minLength=\"2\"\r\n                    maxLength=\"40\"\r\n                />\r\n            </fieldset>\r\n            <span id=\"name-input-error\" className=\"form__error\"></span>\r\n            <fieldset className=\"form__subject\">\r\n                <input\r\n                    className=\"text-form text-form_subject\"\r\n                    type=\"text\"\r\n                    name=\"link\"\r\n                    id=\"profession\"\r\n                    required\r\n                    pattern=\"^[A-Za-zА-Яа-я\\s-]+$\"\r\n                    minLength=\"2\"\r\n                    maxLength=\"200\"\r\n                    defaultValue=\"Профессия\"\r\n                />\r\n            </fieldset>\r\n            <span id=\"profession-error\" className=\"form__error\"></span>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default InformationPopup;\r\n\r\n","import React from 'react';\r\n\r\nfunction AvatarPopup() {\r\n    return (\r\n        <form className=\"form form-add\" name=\"form\" method=\"post\" action=\"#\">\r\n            <fieldset className=\"form__subject\">\r\n                <input\r\n                    className=\"text-form text-form_subject place-form_link text-form__avatar\"\r\n                    type=\"url\"\r\n                    name=\"link\"\r\n                    id=\"link-avatar\"\r\n                    required\r\n                    placeholder=\"Ссылка на картинку\"\r\n                />\r\n            </fieldset>\r\n            <span id=\"link-avatar-error\" className=\"form__error\"></span>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default AvatarPopup;","import React from 'react';\r\n\r\nfunction PictureAddPopup() {\r\n    return (\r\n        <form className=\"form form-add\" name=\"form\" method=\"post\" action=\"#\">\r\n            <fieldset className=\"form__name\">\r\n                <input\r\n                    className=\"text-form text-form_name place-form_name\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"name-place\"\r\n                    required\r\n                    pattern=\"^[A-Za-zА-Яа-я\\s-]+$\"\r\n                    minLength=\"1\"\r\n                    maxLength=\"30\"\r\n                    placeholder=\"Название\"\r\n                />\r\n            </fieldset>\r\n            <span id=\"name-place-error\" className=\"form__error\"></span>\r\n            <fieldset className=\"form__subject\">\r\n                <input\r\n                    className=\"text-form text-form_subject place-form_link\"\r\n                    type=\"url\"\r\n                    name=\"link\"\r\n                    id=\"link-place\"\r\n                    required\r\n                    placeholder=\"Ссылка на картинку\"\r\n                />\r\n            </fieldset>\r\n            <span id=\"link-place-error\" className=\"form__error\"></span>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default PictureAddPopup;\r\n\r\n","import React from \"react\";\r\nimport cross from '../images/crest.svg';\r\n\r\nfunction ImagePopup(props) {\r\n    return (\r\n        <section className={`popup ${props.isOpen && 'popup popup_opened'}`} id=\"picture-big\">\r\n            <div className=\"popup__enlargement\">\r\n                <button\r\n                    onClick={props.onClose}\r\n                    className=\"popup__button-close popup__button-close_big\"\r\n                    type=\"button\"\r\n                >\r\n                    <img className=\"popup__cross\" src={cross} alt=\"Закрыть\"/>\r\n                </button>\r\n\r\n                <img className=\"popup__item\" src={props.image.link} alt={props.image.name}/>\r\n                <h3 className=\"popup__name\">{props.image.name}</h3>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\nexport default ImagePopup;","import React from \"react\";\r\n\r\nfunction SurePopup() {\r\n    return (\r\n<section className=\"popup popup_type_sure\" id=\"sure\">\r\n    <div className=\"popup__container\">\r\n        <button className=\"popup__button-close\" type=\"button\">\r\n            <img className=\"popup__cross\" src=\"images/crest.svg\" alt=\"Закрыть\"/>\r\n        </button>\r\n        <h2 className=\"form__heading form__heading_sure\">Вы уверены?</h2>\r\n        <form>\r\n            <button type=\"submit\" className=\"form__save form__save_sure\">Да</button>\r\n        </form>\r\n    </div>\r\n</section>\r\n    );\r\n}\r\nexport default SurePopup;","import React from 'react';\r\nimport './App.css';\r\nimport Header from \"./Header.js\";\r\nimport Footer from \"./Footer.js\";\r\nimport Main from \"./Main.js\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport InformationPopup from \"./InformationPopup.js\";\r\nimport AvatarPopup from \"./AvatarPopup\";\r\nimport PictureAddPopup from \"./PictureAddPopup\";\r\nimport ImagePopup from \"./ImagePopup.js\";\r\nimport SurePopup from \"./SurePopup\";\r\n\r\nfunction App() {\r\n\r\n    const [dataImage, setDataImage] = React.useState({\r\n        link: '',\r\n        name: ''\r\n    });\r\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\r\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\r\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n    const [selectedCard, setSelectedCard] = React.useState(false);\r\n\r\n    function closeAllPopups() {\r\n        setIsEditAvatarPopupOpen(false);\r\n        setIsEditProfilePopupOpen(false);\r\n        setIsAddPlacePopupOpen(false);\r\n        setSelectedCard(false);\r\n    }\r\n\r\n    function handleEditProfileClick() {\r\n        setIsEditProfilePopupOpen(true);\r\n    }\r\n\r\n    function handleCardClick(props) {\r\n        setSelectedCard(true);\r\n        setDataImage({link: props.link, name: props.name});\r\n    }\r\n\r\n    function handleAddPlaceClick() {\r\n        setIsAddPlacePopupOpen(true);\r\n    }\r\n\r\n    function handleEditAvatarClick() {\r\n        setIsEditAvatarPopupOpen(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"page\">\r\n                <Header/>\r\n                <Main onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick}\r\n                      onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick}\r\n                />\r\n                <Footer/>\r\n                <PopupWithForm name={'information'} title={'Редактировать профиль'} buttonText={'Сохранить'} children={<InformationPopup/>}\r\n                               isOpen={isEditProfilePopupOpen} close={closeAllPopups}/>\r\n                <PopupWithForm name={'picture-add'} title={'Новое место'} buttonText={'Создать'}  children={<PictureAddPopup/>}\r\n                               isOpen={isAddPlacePopupOpen} close={closeAllPopups}/>\r\n                <PopupWithForm name={'avatar'} title={'Обновить аватар'} buttonText={'Сохранить'} children={<AvatarPopup/>}\r\n                               isOpen={isEditAvatarPopupOpen} close={closeAllPopups}/>\r\n                <PopupWithForm name={'sure'} title={'Вы уверены?'} buttonText={'Да'} children={<SurePopup/>}/>\r\n                <ImagePopup isOpen={selectedCard} onClose={closeAllPopups} image={dataImage}/>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}