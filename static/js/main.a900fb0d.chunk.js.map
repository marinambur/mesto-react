{"version":3,"sources":["images/crest.svg","images/logo.svg","images/plus.svg","components/Header.js","components/Footer.js","components/Main.js","components/PopupWithForm.js","components/InformationPopup.js","components/AvatarPopup.js","components/PictureAddPopup.js","components/ImagePopup.js","components/SurePopup.js","components/Card.js","utils/Api.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","href","src","logo","alt","Footer","Main","props","userAvatar","onClick","onEditAvatar","userName","onEditProfile","type","userDescription","onAddPlace","plus","PopupWithForm","id","name","isOpen","cross","close","title","children","InformationPopup","method","action","noValidate","required","pattern","defaultValue","minLength","maxLength","AvatarPopup","placeholder","PictureAddPopup","ImagePopup","onClose","image","link","SurePopup","Card","style","display","key","card","_id","onCardCick","data-name","likes","length","api","options","this","baseUrl","headers","fetch","then","res","ok","json","Promise","reject","status","userJob","body","JSON","stringify","about","cardName","cardLink","cardId","statusText","data","avatar","authorization","App","React","useState","setAvatar","setName","description","setDescription","cards","setCards","dataImage","setDataImage","selectedCard","setSelectedCard","useEffect","all","getUserInfo","getInitialCards","user","userInfo","catch","err","console","log","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","handleCardClick","closeAllPopups","document","getElementById","classList","add","map","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.a900fb0d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/crest.c2d0901f.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.855a8c98.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.bdfb8ebb.svg\";","\r\nimport React from 'react';\r\nimport logo from '../images/logo.svg';\r\nimport './blocks/header/header.css';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <a className=\"header__container\" href=\"#\"\r\n            ><img\r\n                className=\"header__logo\"\r\n                src={logo}\r\n                alt=\"Логотип Россия\"\r\n            />\r\n            </a>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './blocks/footer/footer.css';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copyright\">&copy; 2020 Marina Kuznetsova</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport './blocks/profile/profile.css';\r\nimport './blocks/popup/popup.css';\r\nimport plus from \"../images/plus.svg\";\r\n\r\n\r\nfunction Main(props) {\r\n\r\n    return (\r\n        <>\r\n            <section className=\"profile\">\r\n                <img\r\n                     className=\"profile__avatar\" src={props.userAvatar}\r\n                    alt=\"Аватарка\"\r\n                />\r\n                <div onClick={props.onEditAvatar} className=\"profile__avatar_hover\"></div>\r\n                <div className=\"profile__container\">\r\n                    <div className=\"profile__info\">\r\n                        <h1 className=\"profile__title\">{props.userName}</h1>\r\n                        <button onClick={props.onEditProfile} className=\"profile__button-small\" type=\"button\"></button>\r\n                    </div>\r\n                    <p className=\"profile__subtitle\">{props.userDescription}</p>\r\n                </div>\r\n                <button className=\"profile__button-large\" type=\"button\">\r\n                    <img onClick={props.onAddPlace} src={plus} alt=\"Плюс\"/>\r\n                </button>\r\n            </section>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport './blocks/popup/popup.css';\r\nimport './blocks/form/form.css';\r\nimport cross from '../images/crest.svg';\r\n\r\nfunction PopupWithForm(props) {\r\n    return (\r\n        <section id={props.name} className={`popup ${props.isOpen && 'popup popup_opened'}`}>\r\n            <div className=\"popup__container\">\r\n                <button className=\"popup__button-close\" type=\"button\">\r\n                    <img className=\"popup__cross\" src={cross} alt=\"Закрыть\" onClick={props.close}/>\r\n                </button>\r\n                <h2 className=\"form__heading\">{props.title}</h2>\r\n                {props.children}\r\n                <button type=\"submit\" className=\"form__save\">Сохранить</button>\r\n\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\nimport './blocks/form/form.css';\r\n\r\nfunction InformationPopup() {\r\n    return (\r\n        <form\r\n            className=\"form\"\r\n            id=\"formname\"\r\n            name=\"form\"\r\n            method=\"post\"\r\n            action=\"#\"\r\n            noValidate\r\n        >\r\n            <fieldset className=\"form__name\">\r\n                <input\r\n                    className=\"text-form text-form_name\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"name-input\"\r\n                    required\r\n                    pattern=\"^[A-Za-zА-Яа-я\\s-]+$\"\r\n                    defaultValue=\"Имя\"\r\n                    minLength=\"2\"\r\n                    maxLength=\"40\"\r\n                />\r\n            </fieldset>\r\n            <span id=\"name-input-error\" className=\"form__error\"></span>\r\n            <fieldset className=\"form__subject\">\r\n                <input\r\n                    className=\"text-form text-form_subject\"\r\n                    type=\"text\"\r\n                    name=\"link\"\r\n                    id=\"profession\"\r\n                    required\r\n                    pattern=\"^[A-Za-zА-Яа-я\\s-]+$\"\r\n                    minLength=\"2\"\r\n                    maxLength=\"200\"\r\n                    defaultValue=\"Профессия\"\r\n                />\r\n            </fieldset>\r\n            <span id=\"profession-error\" className=\"form__error\"></span>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default InformationPopup;\r\n\r\n","import React from 'react';\r\nimport './blocks/text-form/text-form.css';\r\n\r\nfunction AvatarPopup() {\r\n    return (\r\n        <form className=\"form form-add\" name=\"form\" method=\"post\" action=\"#\">\r\n            <fieldset className=\"form__subject\">\r\n                <input\r\n                    className=\"text-form text-form_subject place-form_link text-form__avatar\"\r\n                    type=\"url\"\r\n                    name=\"link\"\r\n                    id=\"link-avatar\"\r\n                    required\r\n                    placeholder=\"Ссылка на картинку\"\r\n                />\r\n            </fieldset>\r\n            <span id=\"link-avatar-error\" className=\"form__error\"></span>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default AvatarPopup;","import React from 'react';\r\nimport './blocks/form/form.css';\r\n\r\nfunction PictureAddPopup() {\r\n    return (\r\n        <form className=\"form form-add\" name=\"form\" method=\"post\" action=\"#\">\r\n            <fieldset className=\"form__name\">\r\n                <input\r\n                    className=\"text-form text-form_name place-form_name\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"name-place\"\r\n                    required\r\n                    pattern=\"^[A-Za-zА-Яа-я\\s-]+$\"\r\n                    minLength=\"1\"\r\n                    maxLength=\"30\"\r\n                    placeholder=\"Название\"\r\n                />\r\n            </fieldset>\r\n            <span id=\"name-place-error\" className=\"form__error\"></span>\r\n            <fieldset className=\"form__subject\">\r\n                <input\r\n                    className=\"text-form text-form_subject place-form_link\"\r\n                    type=\"url\"\r\n                    name=\"link\"\r\n                    id=\"link-place\"\r\n                    required\r\n                    placeholder=\"Ссылка на картинку\"\r\n                />\r\n            </fieldset>\r\n            <span id=\"link-place-error\" className=\"form__error\"></span>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default PictureAddPopup;\r\n\r\n","import React from \"react\";\r\nimport './blocks/popup/popup.css';\r\nimport cross from '../images/crest.svg';\r\n\r\nfunction ImagePopup(props) {\r\n    return (\r\n        <section className={`popup ${props.isOpen && 'popup popup_opened'}`} id=\"picture-big\">\r\n            <div className=\"popup__enlargement\">\r\n                <button\r\n                    onClick={props.onClose}\r\n                    className=\"popup__button-close popup__button-close_big\"\r\n                    type=\"button\"\r\n                >\r\n                    <img className=\"popup__cross\" src={cross} alt=\"Закрыть\"/>\r\n                </button>\r\n\r\n                <img className=\"popup__item\" src={props.image.link} />\r\n                <h3 className=\"popup__name\">{props.image.name}</h3>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\nexport default ImagePopup;","import React from \"react\";\r\nimport './blocks/popup/popup.css';\r\n\r\nfunction SurePopup() {\r\n    return (\r\n<section className=\"popup popup_type_sure\" id=\"sure\">\r\n    <div className=\"popup__container\">\r\n        <button className=\"popup__button-close\" type=\"button\">\r\n            <img className=\"popup__cross\" src=\"images/crest.svg\" alt=\"Закрыть\"/>\r\n        </button>\r\n        <h2 className=\"form__heading form__heading_sure\">Вы уверены?</h2>\r\n        <form>\r\n            <button type=\"submit\" className=\"form__save form__save_sure\">Да</button>\r\n        </form>\r\n    </div>\r\n</section>\r\n    );\r\n}\r\nexport default SurePopup;","import React from 'react';\r\nimport './blocks/card/card.css';\r\nimport './blocks/grid/grid.css';\r\n\r\n\r\nfunction Card(props) {\r\n\r\n    function handleClick() {\r\n        props.onCardCick(props.card)\r\n    }\r\n\r\n    return (\r\n        <template id=\"card-template\" style={{display: \"flex\"}}>\r\n            <div className=\"card\" key={props.card._id} id={props.card._id}>\r\n                <button type=\"button\" className=\"card__delete\"></button>\r\n                <a className=\"card__picture\" href=\"#\">\r\n                    <img onClick={handleClick} data-name=\"\" className=\"card__item\" src={props.card.link}\r\n                         alt={props.card.name}/>\r\n                </a>\r\n                <div className=\"card__text\">\r\n                    <h3 className=\"card__header\">{props.card.name}</h3>\r\n                    <div className=\"card__likes\">\r\n                        <button type=\"button\" className=\"card__heart\"></button>\r\n                        <span className=\"card__span-like\">{props.card.likes.length}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </template>\r\n    );\r\n}\r\n\r\nexport default Card;","\r\nexport const token = {\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-12',\r\n    headers: {\r\n        authorization: 'a737011d-02cf-4531-980a-f0cf56195ed9',\r\n        'Content-Type': 'application/json'\r\n    },\r\n};\r\n\r\nclass Api {\r\n    constructor(options) {\r\n        this.baseUrl = options.baseUrl;\r\n        this.headers = options.headers;\r\n    }\r\n\r\n    getUserInfo() {\r\n        return fetch(`${this.baseUrl}/users/me`, {\r\n            headers: this.headers,\r\n        })\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`error${res.status}`);\r\n            });\r\n    }\r\n\r\n   getInitialCards() {\r\n        return fetch(`${this.baseUrl}/cards`, {\r\n            headers: this.headers,\r\n        })\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`error${res.status}`);\r\n            });\r\n    }\r\n\r\n    updateUserInfo(userName, userJob) {\r\n        return fetch(`${this.baseUrl}/users/me`, {\r\n            method: 'PATCH',\r\n            headers: this.headers,\r\n            body: JSON.stringify({\r\n                name: userName,\r\n                about: userJob,\r\n            }),\r\n        })\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`error${res.status}`);\r\n            });\r\n    }\r\n\r\n    addNewCard(cardName, cardLink) {\r\n        return fetch(`${this.baseUrl}/cards`, {\r\n            method: 'POST',\r\n            headers: this.headers,\r\n            body: JSON.stringify({\r\n                name: cardName,\r\n                link: cardLink,\r\n            }),\r\n        })\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`error${res.status}`);\r\n            });\r\n    }\r\n\r\n\r\n    deleteCard(id) {\r\n        return fetch(`${this.baseUrl}/cards/${id}`, {\r\n            method: 'DELETE',\r\n            headers: this.headers,\r\n\r\n        })\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`error${res.status}`);\r\n            });\r\n\r\n    };\r\n\r\n\r\n    putLike(cardId) {\r\n\r\n        return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\r\n            method: 'PUT',\r\n            headers: this.headers\r\n        })\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status} ${res.statusText}`);\r\n            })\r\n            .then((data) => data);\r\n    }\r\n\r\n    deleteLike(cardId) {\r\n        return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\r\n            method: 'DELETE',\r\n            headers: this.headers\r\n        })\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status} ${res.statusText}`);\r\n            })\r\n            .then((data) => data);\r\n    }\r\n\r\n    setUserAvatar(userAvatar) {\r\n        return fetch(`${this.baseUrl}/users/me/avatar`, {\r\n                method: 'PATCH',\r\n                headers: this.headers,\r\n                body: JSON.stringify({\r\n                    avatar: userAvatar\r\n                })\r\n            }\r\n        )\r\n\r\n\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status} ${res.statusText}`);\r\n            })\r\n\r\n    }\r\n}\r\n\r\nconst api = new Api(token);\r\nexport default api;","import React from 'react';\nimport './App.css';\nimport './blocks/grid/grid.css';\nimport Header from \"./Header.js\";\nimport Footer from \"./Footer.js\";\nimport Main from \"./Main.js\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport InformationPopup from \"./InformationPopup.js\";\nimport AvatarPopup from \"./AvatarPopup\";\nimport PictureAddPopup from \"./PictureAddPopup\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport SurePopup from \"./SurePopup\";\nimport Card from \"./Card.js\";\nimport api from \"../utils/Api.js\"\n\nfunction App() {\n    const [avatar, setAvatar] = React.useState();\n    const [name, setName] = React.useState();\n    const [description, setDescription] = React.useState();\n    const [cards, setCards] = React.useState([]);\n    const [dataImage, setDataImage] = React.useState({\n        link: '',\n        name: ''\n    });\n    const [selectedCard, setSelectedCard] = React.useState(false);\n\n    React.useEffect(() => {\n        function userInfo(user) {\n            setAvatar(user.avatar);\n            setName(user.name);\n            setDescription(user.about);\n        }\n\n\n        Promise.all([api.getUserInfo(), api.getInitialCards()])\n            .then(([user, cards]) => {\n                userInfo(user);\n                setCards(cards);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, []);\n\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n\n    function handleCardClick(props) {\n        setSelectedCard(true);\n        setDataImage({link: props.link, name: props.name});\n    }\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n        document.getElementById('information').classList.add('popup_opened')\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n        document.getElementById('picture-add').classList.add('popup_opened')\n    }\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n        document.getElementById('avatar').classList.add('popup_opened')\n    }\n\n    function closeAllPopups() {\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setSelectedCard(false);\n    }\n\n    return (\n        <>\n        <div className=\"page\">\n            <Header/>\n            <Main onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick}\n                  onEditAvatar={handleEditAvatarClick} userAvatar={avatar} userName={name} userDescription={description}\n            />\n            <section className=\"grid\">\n                {cards && cards.map((card) => (\n                    <Card key={card._id} card={card} onCardCick={handleCardClick}/>\n                ))}\n            </section>\n            <Footer/>\n            <PopupWithForm name={'information'} title={'Редактировать профиль'} children={<InformationPopup/>}\n                           isOpen={isEditProfilePopupOpen} close={closeAllPopups}/>\n            <PopupWithForm name={'picture-add'} title={'Новое место'} children={<PictureAddPopup/>}\n                           isOpen={isAddPlacePopupOpen} close={closeAllPopups}/>\n            <PopupWithForm name={'avatar'} title={'Обновить аватар'} children={<AvatarPopup/>}\n                           isOpen={isEditAvatarPopupOpen} close={closeAllPopups}/>\n            <PopupWithForm name={'sure'} title={'Вы уверены?'} children={<SurePopup/>}/>\n            <ImagePopup isOpen={selectedCard} onClose={closeAllPopups} image={dataImage}/>\n        </div>\n\n        </>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}